#!/bin/bash

# System Monitoring Script
# Author: Your Name
# Description: Monitors system resources with real-time updates and CLI switches.

refresh_interval=2  # Refresh every 2 seconds

# Function to display CPU & Memory usage
show_top_apps() {
    echo "Top 10 Applications (CPU & Memory Usage):"
    ps -eo pid,comm,%cpu,%mem --sort=-%cpu | head -11
}

# Function to display network status
show_network() {
    echo "Network Monitoring:"
    echo "Active Connections: $(ss -s | grep -oP '(?<=estab )\d+')"
    echo "Packet Drops: $(netstat -s | grep 'dropped' | awk '{print $1}')"
    echo "Data In/Out: $(ifconfig | grep -E 'RX bytes|TX bytes' | awk '{print $2, $3, $6, $7}')"
}

# Function to display disk usage
show_disk() {
    echo "Disk Usage:"
    df -h | awk '$5 ~ /[0-9]%/ { print $0 }'
}

# Function to display system load
show_load() {
    echo "System Load: $(uptime | awk '{print $(NF-2), $(NF-1), $NF}')"
}

# Function to display memory usage
show_memory() {
    echo "Memory Usage:"
    free -h
}

# Function to display process monitoring
show_processes() {
    echo "Process Monitoring:"
    ps aux --sort=-%cpu | head -6
}

# Function to monitor services
show_services() {
    echo "Service Monitoring:"
    for service in sshd nginx apache2 iptables; do
        systemctl is-active --quiet $service && echo "$service: RUNNING" || echo "$service: STOPPED"
    done
}

# Display dashboard based on CLI switch
case "$1" in
    -cpu) show_top_apps ;;
    -network) show_network ;;
    -disk) show_disk ;;
    -load) show_load ;;
    -memory) show_memory ;;
    -processes) show_processes ;;
    -services) show_services ;;
    *)
        while true; do
            clear
            show_top_apps
            show_network
            show_disk
            show_load
            show_memory
            show_processes
            show_services
            echo "Refreshing every $refresh_interval seconds... Press [Ctrl+C] to exit."
            sleep $refresh_interval
        done
        ;;
esac


###2nd way "DEVOPS MONITORING SECURITY"

#!/bin/bash

# System Monitoring and Security Audit Script
# This script provides real-time monitoring of system resources and performs security audits.

# Function to display CPU and Memory usage
display_top_processes() {
    echo "Top 10 CPU & Memory consuming applications:"
    ps -eo pid,comm,%cpu,%mem --sort=-%cpu | head -11
}

# Function to monitor network activity
display_network_stats() {
    echo "Network Monitoring:"
    echo "Active Connections: $(netstat -an | grep ESTABLISHED | wc -l)"
    echo "Packet Drops: $(netstat -s | grep -i 'dropped' | awk '{print $1}')"
    echo "Data Transfer:"
    echo "In: $(cat /proc/net/dev | awk 'NR>2 {sum+=$2} END {print sum/1024/1024 " MB"}')"
    echo "Out: $(cat /proc/net/dev | awk 'NR>2 {sum+=$10} END {print sum/1024/1024 " MB"}')"
}

# Function to monitor disk usage
display_disk_usage() {
    echo "Disk Usage:"
    df -h | awk '{if ($5+0 > 80) print $0;}'
}

# Function to monitor system load
display_system_load() {
    echo "System Load:"
    uptime
    echo "CPU Usage:"; top -bn1 | grep "Cpu(s)"
}

# Function to monitor memory usage
display_memory_usage() {
    echo "Memory Usage:"
    free -m
}

# Function to monitor services
display_service_status() {
    echo "Service Status:"
    for service in sshd nginx apache2 iptables; do
        systemctl is-active --quiet $service && echo "$service: RUNNING" || echo "$service: STOPPED"
    done
}

# Function to perform security audit
perform_security_audit() {
    echo "Security Audit:"
    echo "Listing all users and checking root privileges:"
    awk -F: '$3 == 0 {print $1 " has root privileges"}' /etc/passwd

    echo "Checking world-writable files:"
    find / -type f -perm -o+w 2>/dev/null

    echo "Checking for running services:"
    systemctl list-units --type=service --state=running

    echo "Checking firewall status:"
    sudo ufw status || sudo iptables -L

    echo "Checking open ports:"
    netstat -tulpn | grep LISTEN

    echo "Checking SSH security:"
    grep -E 'PermitRootLogin|PasswordAuthentication' /etc/ssh/sshd_config
}

# Function to perform server hardening
perform_server_hardening() {
    echo "Applying security hardening..."
    echo "Disabling root SSH login and enforcing key-based authentication."
    sudo sed -i 's/^PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config
    sudo sed -i 's/^PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
    sudo systemctl restart sshd

    echo "Applying firewall rules..."
    sudo ufw enable
    sudo ufw allow OpenSSH
    sudo ufw deny 23

    echo "Setting up automatic updates..."
    sudo apt install unattended-upgrades -y
    sudo dpkg-reconfigure -plow unattended-upgrades
}

# Function to process command-line arguments
while [[ "$1" ]]; do
    case "$1" in
        -cpu) display_system_load;;
        -memory) display_memory_usage;;
        -network) display_network_stats;;
        -disk) display_disk_usage;;
        -services) display_service_status;;
        -processes) display_top_processes;;
        -audit) perform_security_audit;;
        -hardening) perform_server_hardening;;
        *) echo "Invalid option: $1";;
    esac
    shift
done

# If no arguments are provided, display all
echo "System Monitor Dashboard"
display_system_load
display_memory_usage
display_network_stats
display_disk_usage
display_service_status
display_top_processes
perform_security_audit











